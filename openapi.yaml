openapi: 3.0.0
info:
    title: Websupport API
    version: 1.0.0
    description: Purpose of this API is to enable to manage services provided by Websupport.
externalDocs:
    url: https://rest.websupport.sk/docs/index
servers:
    - url: https://rest.websupport.sk/v1
paths:
    # DNS service
    /user/{userId}/zone:
        get:
            summary: List of all zones
            description: Retrieves a list of all zones.
            tags:
                - DNS service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/Page"
                - $ref: "#/components/parameters/PageSize"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    items:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: integer
                                                    description: Zone ID
                                                name:
                                                    type: string
                                                    description: Zone name
                                    pager:
                                        $ref: "#/components/schemas/Pager"
    /user/{userId}/zone/{domainName}:
        get:
            summary: Get a zone detail
            description: Retrieves the details of a specific zone by its domain name.
            tags:
                - DNS service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/DomainName"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    id:
                                        type: integer
                                        description: Zone ID
                                    name:
                                        type: string
                                        description: Zone name
                                    updateTime:
                                        type: integer
                                        description: Timestamp of last update
                "404":
                    $ref: "#/components/responses/NotFound"
    /user/{userId}/zone/{domainName}/record:
        get:
            summary: List all records
            description: >
                Retrieves a list of all records for a specific zone.
            tags:
                - DNS service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/DomainName"
                - $ref: "#/components/parameters/Page"
                - $ref: "#/components/parameters/PageSize"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    items:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/DNSRecord"
                                    pager:
                                        $ref: "#/components/schemas/Pager"
                "404":
                    $ref: "#/components/responses/NotFound"
        post:
            summary: Create a new record
            description: Creates a new DNS record for a specific domain name and zone.
            tags:
                - DNS service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/DomainName"
                - $ref: "#/components/parameters/RequiredDate"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DNSRecord"
            responses:
                "201":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    item:
                                        $ref: "#/components/schemas/DNSRecord"
                                    status:
                                        type: string
                                        description: Status of the operation (success or error)
                                    errors:
                                        type: object
                                        properties:
                                            content:
                                                type: array
                                                items:
                                                    type: string
                                                    description: Content validation error messages
                                            name:
                                                type: array
                                                items:
                                                    type: string
                                                    description: Name validation error messages
                "400":
                    description: Validation error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        description: Status of the operation (success or error)
                                    item:
                                        type: object
                                        properties:
                                            id:
                                                type: string
                                                nullable: true
                                                description: Null value for failed record creation
                                            type:
                                                type: string
                                                description: Record type
                                            name:
                                                type: string
                                                description: Record name
                                            content:
                                                type: string
                                                description: Record content
                                            ttl:
                                                type: integer
                                                description: Time to live in seconds
                                            prio:
                                                type: integer
                                                description: Record priority (only for certain types)
                                            weight:
                                                type: integer
                                                description: Record weight (only for certain types)
                                            port:
                                                type: integer
                                                description: Record port (only for certain types)
                                            zone:
                                                type: object
                                                properties:
                                                    id:
                                                        type: integer
                                                        description: Zone ID
                                                    name:
                                                        type: string
                                                        description: Zone name
                                                    updateTime:
                                                        type: integer
                                                        description: Zone update time
                                    errors:
                                        type: object
                                        properties:
                                            content:
                                                type: array
                                                items:
                                                    type: string
                                                    description: Content validation error messages
                                            name:
                                                type: array
                                                items:
                                                    type: string
                                                    description: Name validation error messages
                "404":
                    $ref: "#/components/responses/NotFound"
    /user/{userId}/zone/{domainName}/record/{recordId}:
        get:
            summary: Get a record
            description: Retrieves a specific record by its domain name and record ID.
            tags:
                - DNS service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/DomainName"
                - $ref: "#/components/parameters/RecordId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    id:
                                        type: integer
                                        description: Record ID
                                    type:
                                        type: string
                                        description: Record type
                                    name:
                                        type: string
                                        description: Record name
                                    content:
                                        type: string
                                        description: Record content
                                    ttl:
                                        type: integer
                                        description: Time to live in seconds
                                    prio:
                                        type: integer
                                        description: Record priority (only for certain types)
                                    weight:
                                        type: integer
                                        description: Record weight (only for certain types)
                                    port:
                                        type: integer
                                        description: Record port (only for certain types)
                                    zone:
                                        type: object
                                        properties:
                                            id:
                                                type: integer
                                                description: Zone ID
                                            name:
                                                type: string
                                                description: Zone name
                                            updateTime:
                                                type: integer
                                                description: Zone update time
                "404":
                    $ref: "#/components/responses/NotFound"
        put:
            summary: Update a record
            description: Updates an existing DNS record for a specific domain name, zone, and record ID.
            tags:
                - DNS service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/DomainName"
                - $ref: "#/components/parameters/RecordId"
                - $ref: "#/components/parameters/RequiredDate"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: Subdomain name or "@" if no subdomain is required
                                content:
                                    type: string
                                    description: Record content (e.g., IP address, domain name)
                                ttl:
                                    type: integer
                                    description: Time to live in seconds (optional)
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        description: Status of the operation (success or error)
                                    item:
                                        type: object
                                        properties:
                                            id:
                                                type: integer
                                                description: Record ID
                                            type:
                                                type: string
                                                description: Record type
                                            name:
                                                type: string
                                                description: Record name
                                            content:
                                                type: string
                                                description: Record content
                                            ttl:
                                                type: integer
                                                description: Time to live in seconds
                                            prio:
                                                type: integer
                                                description: Record priority (only for certain types)
                                            weight:
                                                type: integer
                                                description: Record weight (only for certain types)
                                            port:
                                                type: integer
                                                description: Record port (only for certain types)
                                            zone:
                                                type: object
                                                properties:
                                                    id:
                                                        type: integer
                                                        description: Zone ID
                                                    name:
                                                        type: string
                                                        description: Zone name
                                                    updateTime:
                                                        type: integer
                                                        description: Zone update time
                                    errors:
                                        type: object
                                        properties:
                                            content:
                                                type: array
                                                items:
                                                    type: string
                                                    description: Content validation error messages
                                            name:
                                                type: array
                                                items:
                                                    type: string
                                                    description: Name validation error messages
                "400":
                    description: Validation error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        description: Status of the operation (success or error)
                                    item:
                                        type: object
                                        properties:
                                            id:
                                                type: string
                                                nullable: true
                                                description: Null value for failed record update
                                            type:
                                                type: string
                                                description: Record type
                                            name:
                                                type: string
                                                description: Record name
                                            content:
                                                type: string
                                                description: Record content
                                            ttl:
                                                type: integer
                                                description: Time to live in seconds
                                            prio:
                                                type: integer
                                                description: Record priority (only for certain types)
                                            weight:
                                                type: integer
                                                description: Record weight (only for certain types)
                                            port:
                                                type: integer
                                                description: Record port (only for certain types)
                                            zone:
                                                type: object
                                                properties:
                                                    id:
                                                        type: integer
                                                        description: Zone ID
                                                    name:
                                                        type: string
                                                        description: Zone name
                                                    updateTime:
                                                        type: integer
                                                        description: Zone update time
                                    errors:
                                        type: object
                                        properties:
                                            content:
                                                type: array
                                                items:
                                                    type: string
                                                    description: Content validation error messages
                                            name:
                                                type: array
                                                items:
                                                    type: string
                                                    description: Name validation error messages
                "404":
                    $ref: "#/components/responses/NotFound"
        delete:
            summary: Delete a record
            description: Deletes an existing DNS record for a specific domain name, zone, and record ID.
            tags:
                - DNS service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/DomainName"
                - $ref: "#/components/parameters/RecordId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        description: Status of the operation (success or error)
                                    item:
                                        type: object
                                        properties:
                                            id:
                                                type: integer
                                                description: Record ID
                                            type:
                                                type: string
                                                description: Record type
                                            name:
                                                type: string
                                                description: Record name
                                            content:
                                                type: string
                                                description: Record content
                                            ttl:
                                                type: integer
                                                description: Time to live in seconds
                                            prio:
                                                type: integer
                                                description: Record priority (only for certain types)
                                            weight:
                                                type: integer
                                                description: Record weight (only for certain types)
                                            port:
                                                type: integer
                                                description: Record port (only for certain types)
                                            zone:
                                                type: object
                                                properties:
                                                    id:
                                                        type: integer
                                                        description: Zone ID
                                                    name:
                                                        type: string
                                                        description: Zone name
                                                    updateTime:
                                                        type: integer
                                                        description: Zone update time
                                    errors:
                                        type: array
                                        items:
                                            type: string
                                        description: Error messages
                "404":
                    $ref: "#/components/responses/NotFound"

    # Hosting service
    /user/{userId}/hosting:
        get:
            summary: List of all hostings
            description: Retrieves a list of all hostings for a specific user.
            tags:
                - Hosting service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/Page"
                - $ref: "#/components/parameters/PageSize"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    items:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: integer
                                                    description: Hosting ID
                                                name:
                                                    type: string
                                                    description: Hosting name
                                                uuid:
                                                    type: string
                                                    description: Hosting UUID
                                    pager:
                                        $ref: "#/components/schemas/Pager"
                "404":
                    $ref: "#/components/responses/NotFound"
    /user/{userId}/hosting/{id-or-uuid}:
        get:
            summary: Get a hosting detail
            description: Retrieves details of a specific hosting by service ID or UUID.
            tags:
                - Hosting service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/IdOrUUID"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    id:
                                        type: integer
                                        description: Hosting ID
                                    name:
                                        type: string
                                        description: Hosting name
                                    uuid:
                                        type: string
                                        description: Hosting UUID
                "404":
                    $ref: "#/components/responses/NotFound"
    /user/{userId}/hosting/{hostingId}/vhost:
        get:
            summary: List of all webhosting domains (vhosts)
            description: >
                Retrieves a list of all webhosting domains (vhosts) for a
                specific hosting.
            tags:
                - Hosting service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/HostingId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    items:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/WebhostingDomains"
                                    pager:
                                        $ref: "#/components/schemas/Pager"
                "404":
                    $ref: "#/components/responses/NotFound"
    /user/{userId}/hosting/{hostingId}/vhost/{vhostId}:
        get:
            summary: Get a webhosting domain (vhost) detail
            description: >
                Retrieves the details of a specific webhosting domain (vhost).f
            tags:
                - Hosting service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/HostingId"
                - $ref: "#/components/parameters/VhostID"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/WebhostingDomains"
                "404":
                    $ref: "#/components/responses/NotFound"
    /user/{userId}/hosting/{hostingId}/size-stats:
        get:
            summary: Get hosting size
            description: Retrieves the size information of a specific hosting.
            tags:
                - Hosting service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/HostingId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SizeStats"
                "404":
                    $ref: "#/components/responses/NotFound"
    /user/{userId}/hosting/{hostingId}/domain-stats:
        get:
            summary: Get hosting domains usage
            description: Retrieves the usage information of domains in a specific hosting.
            tags:
                - Hosting service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/HostingId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DomainStats"
                "404":
                    $ref: "#/components/responses/NotFound"
    /user/{userId}/hosting/{hostingId}/ftp-stats:
        get:
            summary: Get FTP size
            description: Retrieves the size information of FTP storage in a specific hosting.
            tags:
                - Hosting service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/HostingId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/FTPStats"
                "404":
                    $ref: "#/components/responses/NotFound"
    /user/{userId}/hosting/{hostingId}/db:
        get:
            summary: List of all databases
            description: Retrieves a list of all databases in a specific hosting.
            tags:
                - Hosting service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/HostingId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    items:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/Database"
                                    pager:
                                        $ref: "#/components/schemas/Pager"
                                    domains:
                                        type: array
                                        items:
                                            type: string
                                            description: List of associated domains
                "404":
                    $ref: "#/components/responses/NotFound"
        post:
            summary: Create new database
            description: Creates a new database in the specified hosting.
            tags:
                - Hosting service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/HostingId"
                - $ref: "#/components/parameters/RequiredDate"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Database"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    item:
                                        $ref: "#/components/schemas/Database"
                                    errors:
                                        $ref: "#/components/schemas/ValidationErrors"
                                    status:
                                        type: string
                                        description: Request status (success or error)
    /user/{userId}/hosting/{hostingId}/db/{dbId}:
        get:
            summary: Get database detail
            description: Retrieves details of a specific database in a hosting.
            tags:
                - Hosting service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/HostingId"
                - $ref: "#/components/parameters/DatabaseId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Database"
                "404":
                    $ref: "#/components/responses/NotFound"
        put:
            summary: Update database
            description: Updates an existing database in the specified hosting.
            tags:
                - Hosting service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/HostingId"
                - $ref: "#/components/parameters/DatabaseId"
                - $ref: "#/components/parameters/RequiredDate"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DatabaseUpdate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    item:
                                        $ref: "#/components/schemas/Database"
                                    errors:
                                        $ref: "#/components/schemas/ValidationErrors"
                                    status:
                                        type: string
                                        description: Request status (success or error)
        delete:
            summary: Delete a database
            description: Deletes the specified database from the hosting.
            tags:
                - Hosting service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/HostingId"
                - $ref: "#/components/parameters/DatabaseId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    errors:
                                        $ref: "#/components/schemas/ValidationErrors"
                                    item:
                                        $ref: "#/components/schemas/Database"
                                    status:
                                        type: string
                                        description: Request status (success or error)
    /user/{userId}/hosting/{hostingId}/dbusers:
        get:
            summary: List of all databases users
            description: Retrieves a list of all database users in a specific hosting.
            tags:
                - Hosting service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/HostingId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    items:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: integer
                                                    description: Database user ID
                                                dbUser:
                                                    type: string
                                                    description: Database username
                                                domain:
                                                    type: string
                                                    description: Associated domain
                                                dbType:
                                                    type: string
                                                    description: Database type
                                    domains:
                                        type: array
                                        items:
                                            type: string
                                            description: List of associated domains
                                    pager:
                                        $ref: "#/components/schemas/Pager"
                "404":
                    $ref: "#/components/responses/NotFound"
    /user/{userId}/hosting/{hostingId}/db/{dbId}/size-stats:
        get:
            summary: DB size
            description: Retrieves the size statistics of the specified database.
            tags:
                - Hosting service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/HostingId"
                - $ref: "#/components/parameters/DatabaseId"
                - $ref: "#/components/parameters/Interval"
                - $ref: "#/components/parameters/Length"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    items:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                size:
                                                    type: integer
                                                    description: Database size
                                                timestamp:
                                                    type: integer
                                                    description: Timestamp of the measurement
                                    range:
                                        description: Time range
                                        $ref: "#/components/schemas/Range"
    /user/{userId}/hosting/{hostingId}/db/{dbId}/cpu-stats:
        get:
            summary: DB CPU
            description: Retrieves the CPU statistics of the specified database.
            tags:
                - Hosting service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/HostingId"
                - $ref: "#/components/parameters/DatabaseId"
                - $ref: "#/components/parameters/Interval"
                - $ref: "#/components/parameters/Length"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    items:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                access_denied:
                                                    type: integer
                                                    description: Number of access denied
                                                binlog_bytes_written:
                                                    type: integer
                                                    description: Number of bytes written to the binary log
                                                busy_time:
                                                    type: integer
                                                    description: CPU busy time
                                                bytes_received:
                                                    type: integer
                                                    description: Number of bytes received
                                                bytes_sent:
                                                    type: integer
                                                    description: Number of bytes sent
                                                commit_transactions:
                                                    type: integer
                                                    description: Number of commit transactions
                                                concurrent_connections:
                                                    type: integer
                                                    description: Number of concurrent connections
                                                connected_time:
                                                    type: integer
                                                    description: Time connected
                                                cpu_time:
                                                    type: integer
                                                    description: CPU time
                                                denied_connections:
                                                    type: integer
                                                    description: Number of denied connections
                                                empty_queries:
                                                    type: integer
                                                    description: Number of empty queries
                                                lost_connections:
                                                    type: integer
                                                    description: Number of lost connections
                                                other_commands:
                                                    type: integer
                                                    description: Number of other commands
                                                rollback_transactions:
                                                    type: integer
                                                    description: Number of rollback transactions
                                                rows_fetched:
                                                    type: integer
                                                    description: Number of rows fetched
                                                rows_updated:
                                                    type: integer
                                                    description: Number of rows updated
                                                select_commands:
                                                    type: integer
                                                    description: Number of select commands
                                                table_rows_read:
                                                    type: integer
                                                    description: Number of table rows read
                                                timestamp:
                                                    type: integer
                                                    description: Timestamp of the measurement
                                                total_connections:
                                                    type: integer
                                                    description: Total number of connections
                                                update_commands:
                                                    type: integer
                                                    description: Number of update commands
                                    range:
                                        description: Time range
                                        $ref: "#/components/schemas/Range"
    /user/{userId}/hosting/{hostingId}/mailbox:
        get:
            summary: List of all mailboxes
            description: Retrieves a list of all mailboxes for the specified user and hosting.
            tags:
                - Hosting service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/HostingId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    items:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/Mailbox"
                                    pager:
                                        $ref: "#/components/schemas/Pager"
                                    domains:
                                        type: array
                                        items:
                                            type: string
                                        description: List of domains
    /user/{userId}/hosting/{hostingId}/mailbox/{mailboxId}:
        get:
            summary: Get mailbox detail
            description: Retrieves detailed information about a specific mailbox.
            tags:
                - Hosting service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/HostingId"
                - $ref: "#/components/parameters/MailboxId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Mailbox"
        delete:
            summary: Delete mailbox
            description: Deletes an existing mailbox.
            tags:
                - Hosting service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/HostingId"
                - $ref: "#/components/parameters/DomainId"
                - $ref: "#/components/parameters/MailboxId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    errors:
                                        $ref: "#/components/schemas/ValidationErrors"
                                    item:
                                        $ref: "#/components/schemas/Mailbox"
                                    status:
                                        type: string
                                        description: Request status ('success' or 'error')
    /user/{userId}/hosting/{hostingId}/domain/{domainId}/mailbox:
        post:
            summary: Create new mailbox
            description: Creates a new mailbox for a specific domain.
            tags:
                - Hosting service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/HostingId"
                - $ref: "#/components/parameters/DomainId"
                - $ref: "#/components/parameters/RequiredDate"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Mailbox"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    item:
                                        $ref: "#/components/schemas/Mailbox"
                                    errors:
                                        $ref: "#/components/schemas/ValidationErrors"
                                    status:
                                        type: string
                                        description: Request status ('success' or 'error')
    /user/{userId}/hosting/{hostingId}/domain/{domainId}/mailbox/{mailboxId}:
        post:
            summary: Update mailbox
            description: Updates an existing mailbox.
            tags:
                - Hosting service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/HostingId"
                - $ref: "#/components/parameters/DomainId"
                - $ref: "#/components/parameters/MailboxId"
                - $ref: "#/components/parameters/RequiredDate"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Mailbox"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    item:
                                        $ref: "#/components/schemas/Mailbox"
                                    errors:
                                        $ref: "#/components/schemas/ValidationErrors"
                                    status:
                                        type: string
                                        description: Request status ('success' or 'error')
    /user/{userId}/hosting/{hostingId}/mail/size-stats:
        get:
            summary: Get email size history per hosting
            description: Retrieves the email size history per hosting for multiple domains.
            tags:
                - Hosting service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/HostingId"
                - $ref: "#/components/parameters/Interval"
                - $ref: "#/components/parameters/Length"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    domains:
                                        type: array
                                        items:
                                            type: string
                                        description: List of domains
                                    items:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                size:
                                                    type: integer
                                                    description: Email size in bytes
                                                timestamp:
                                                    type: integer
                                                    description: Timestamp of the measurement
                                        description: List of email size measurements
                                    range:
                                        description: Range of timestamps for the measurements
                                        $ref: "#/components/schemas/Range"
    /user/{userId}/hosting/{hostingId}/mail/{domain}/size-stats:
        get:
            summary: Get email size history per domain
            description: Retrieves the email size history per domain.
            tags:
                - Hosting service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/HostingId"
                - $ref: "#/components/parameters/DomainName"
                - $ref: "#/components/parameters/Interval"
                - $ref: "#/components/parameters/Length"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    items:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                size:
                                                    type: integer
                                                    description: Email size in bytes
                                                timestamp:
                                                    type: integer
                                                    description: Timestamp of the measurement
                                        description: List of email size measurements
                                    range:
                                        description: Range of timestamps for the measurements
                                        $ref: "#/components/schemas/Range"
    /user/{userId}/hosting/{hostingId}/ftp-account:
        get:
            summary: List of all FTP accounts
            description: Retrieves a list of all FTP accounts for the specified user and hosting.
            tags:
                - Hosting service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/HostingId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    items:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: integer
                                                    readOnly: true
                                                    description: FTP account ID
                                                hostingId:
                                                    type: integer
                                                    readOnly: true
                                                    description: Hosting ID
                                                createTime:
                                                    type: integer
                                                    description: Timestamp of account creation
                                                login:
                                                    type: string
                                                    description: FTP account login
                                                disabled:
                                                    type: boolean
                                                    description: Indicates if the account is disabled
                                                note:
                                                    type: string
                                                    description: Additional note or description
                                        description: List of FTP accounts
                                    pager:
                                        $ref: "#/components/schemas/Pager"
        put:
            summary: Create new FTP account
            description: Creates a new FTP account.
            tags:
                - Hosting service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/HostingId"
                - $ref: "#/components/parameters/RequiredDate"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/FTPAccount"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        description: Status of the request
                                    item:
                                        $ref: "#/components/schemas/FTPAccount"
                                    errors:
                                        $ref: "#/components/schemas/ValidationErrors"
    /user/{userId}/hosting/{hostingId}/ftp-account/{ftpAccountId}:
        get:
            summary: Get FTP account detail
            description: Retrieves the details of a specific FTP account.
            tags:
                - Hosting service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/HostingId"
                - $ref: "#/components/parameters/FTPAccountId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/FTPAccount"
        post:
            summary: Update FTP account
            description: Updates an existing FTP account.
            tags:
                - Hosting service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/HostingId"
                - $ref: "#/components/parameters/FTPAccountId"
                - $ref: "#/components/parameters/RequiredDate"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/FTPAccount"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        description: Status of the request
                                    item:
                                        $ref: "#/components/schemas/FTPAccount"
                "422":
                    description: Validation errors
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        description: Status of the request
                                    errors:
                                        $ref: "#/components/schemas/ValidationErrors"
        delete:
            summary: Delete FTP account
            description: Deletes an existing FTP account.
            tags:
                - Hosting service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/HostingId"
                - $ref: "#/components/parameters/FTPAccountId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        description: Status of the request
                                    item:
                                        $ref: "#/components/schemas/FTPAccount"

    # Invoice service
    /user/{userId}/invoice:
        get:
            summary: List of all invoices
            description: Retrieves a list of all invoices for a specific user.
            tags:
                - Order service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/Page"
                - $ref: "#/components/parameters/PageSize"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    items:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/Invoice"
                                    pager:
                                        $ref: "#/components/schemas/Pager"
                "401":
                    description: Unauthorized
                "403":
                    description: Forbidden
                "404":
                    description: Not Found
    /user/{userId}/invoice/{invoiceId}:
        get:
            summary: Get an invoice detail
            description: Retrieves the details of a specific invoice.
            tags:
                - Order service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/InvoiceId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Invoice"
                "401":
                    description: Unauthorized
                "403":
                    description: Forbidden
                "404":
                    description: Not Found
    /user/{userId}/invoice/{invoiceId}/pdf:
        get:
            summary: Get an invoice PDF
            description: Retrieves the PDF file of a specific invoice.
            tags:
                - Order service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/InvoiceId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    id:
                                        type: string
                                        description: Invoice ID
                                    pdf:
                                        type: string
                                        format: byte
                                        description: Base64 encoded PDF file
                "401":
                    description: Unauthorized
                "403":
                    description: Forbidden
                "404":
                    description: Not Found
    /user/{userId}/invoice/{invoiceId}/raw-pdf:
        get:
            summary: Get an invoice PDF as RAW data
            description: Retrieves the PDF file of a specific invoice as binary data.
            tags:
                - Order service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/InvoiceId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/pdf:
                            schema:
                                type: string
                                format: binary
                                description: PDF file as binary data
                "401":
                    description: Unauthorized
                "403":
                    description: Forbidden
                "404":
                    description: Not Found
    /user/{userId}/invoice/{invoiceId}/pay:
        get:
            summary: Pay it
            description: Provides payment options for an invoice.
            tags:
                - Order service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/InvoiceId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Pay"
                "401":
                    description: Unauthorized
                "404":
                    description: Not Found
    /user/{userId}/invoice/{invoiceId}/pay/byCredit:
        put:
            summary: Pay with credit
            description: Pays an invoice using credits.
            tags:
                - Order service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/InvoiceId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: boolean
                                        description: Indicates if the payment was successful
                "401":
                    description: Unauthorized
                "404":
                    description: Not Found
    /user/{userId}/invoice/{invoiceId}/pay/byPaymentCard/{paymentCardId}:
        put:
            summary: Pay with a stored card
            description: Pays an invoice using a stored payment card.
            tags:
                - Order service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/InvoiceId"
                - $ref: "#/components/parameters/PaymentCardId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: boolean
                                        description: Indicates if the payment was successful
                "401":
                    description: Unauthorized
                "404":
                    description: Not Found

    # Order service
    /order/{market}:
        get:
            summary: List of available services
            description: Retrieves a list of available services and their prices for a specific market.
            tags:
                - Order service
            parameters:
                - $ref: "#/components/parameters/Market"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        type:
                                            type: string
                                            description: Service type
                                        prices:
                                            type: array
                                            items:
                                                type: object
                                                properties:
                                                    tld:
                                                        type: string
                                                        description: Top-level domain
                                                    price:
                                                        type: number
                                                        format: float
                                                        description: Price for the specified TLD
                                                    limit:
                                                        type: integer
                                                        description: Hosting limit
                                                    ram:
                                                        type: integer
                                                        description: RAM size
                                                    disk:
                                                        type: integer
                                                        description: Disk size
                                                    vcpus:
                                                        type: integer
                                                        description: Number of virtual CPUs
                                        discounts:
                                            type: array
                                            items:
                                                type: object
                                                properties:
                                                    tld:
                                                        type: string
                                                        description: Top-level domain
                                                    price:
                                                        type: number
                                                        format: float
                                                        description: Discounted price for the specified TLD
                                        currency:
                                            type: string
                                            description: Currency code
                                        templates:
                                            type: array
                                            items:
                                                type: object
                                                properties:
                                                    name:
                                                        type: string
                                                        description: Template name
                                                    version:
                                                        type: string
                                                        description: Template version
                "404":
                    description: Not Found
    /order/{market}/{type}:
        get:
            summary: Service details
            description: Retrieves details of a specific service for a given market.
            tags:
                - Order service
            parameters:
                - $ref: "#/components/parameters/Market"
                - $ref: "#/components/parameters/Type"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    type:
                                        type: string
                                        description: Service type
                                    prices:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                limit:
                                                    type: integer
                                                    description: Hosting limit
                                                price:
                                                    type: number
                                                    format: float
                                                    description: Price for the specified limit
                                    currency:
                                        type: string
                                        description: Currency code
                "404":
                    description: Not Found
    /order/{market}/validate:
        post:
            summary: Validate multiple services
            description: >
                Validates multiple services in a single request.
            tags:
                - Order service
            parameters:
                - $ref: "#/components/parameters/Market"
                - $ref: "#/components/parameters/RequiredDate"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: object
                                properties:
                                    type:
                                        type: string
                                        description: Service type (e.g., domain, thehosting)
                                    domain:
                                        type: string
                                        description: Domain name (required for domain service)
                                    limit:
                                        type: integer
                                        description: Hosting limit in MB (required for thehosting service)
                                    period:
                                        type: integer
                                        nullable: true
                                        description: Service billing period in months (nullable)
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        status:
                                            type: string
                                            description: Status of the validation
                                        item:
                                            type: object
                                            description: Validated service details
                                        errors:
                                            type: array
                                            description: Error messages for the service
                                            items:
                                                type: object
                "500":
                    description: Internal Server Error
    /order/{market}/validate/credit:
        post:
            summary: Validate credit
            description: >
                Validates order attributes for credit service.
            tags:
                - Order service
            parameters:
                - $ref: "#/components/parameters/Market"
                - $ref: "#/components/parameters/RequiredDate"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - amount
                            properties:
                                amount:
                                    type: integer
                                    description: Amount to order (1 credit is 1 EUR, HUF or CZK depending on market)
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    item:
                                        $ref: "#/components/schemas/CreditValidity"
                                    status:
                                        type: string
                                        description: Status of the validation
                                    errors:
                                        type: object
                                        additionalProperties:
                                            type: array
                                            items:
                                                type: string
                                        description: Object containing field-specific error messages
                "500":
                    description: Internal Server Error
    /order/{market}/validate/domain:
        post:
            summary: Validate a domain
            description: Validates order attributes for a domain.
            tags:
                - Order service
            parameters:
                - $ref: "#/components/parameters/Market"
                - $ref: "#/components/parameters/RequiredDate"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ValidateDomain"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        description: Status of the validation
                                    item:
                                        $ref: "#/components/schemas/DomainValidity"
                                    errors:
                                        oneOf:
                                            - type: array
                                              items:
                                                  type: string
                                              description: Array of error messages
                                            - type: object
                                              additionalProperties:
                                                  type: array
                                                  items:
                                                      type: string
                                              description: Object containing field-specific error messages
                "500":
                    description: Internal Server Error
    /order/{market}/validate/thehosting:
        post:
            summary: Validate The Hosting service
            description: Validates order attributes for The Hosting service.
            tags:
                - Order service
            parameters:
                - $ref: "#/components/parameters/Market"
                - $ref: "#/components/parameters/RequiredDate"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ValidateHosting"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        description: Status of the validation
                                    item:
                                        $ref: "#/components/schemas/HostingValidity"
                                    errors:
                                        type: object
                                        additionalProperties:
                                            type: array
                                            items:
                                                type: string
                                        description: Object containing field-specific error messages
                "500":
                    description: Internal Server Error
    /order/{market}/validate/vps:
        post:
            summary: Validate VPS
            description: Validates order attributes for VPS service.
            tags:
                - Order service
                - VPS service
            parameters:
                - $ref: "#/components/parameters/Market"
                - $ref: "#/components/parameters/RequiredDate"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/VPS"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    item:
                                        allOf:
                                            - $ref: "#/components/schemas/VPS"
                                            - $ref: "#/components/schemas/Pricing"
                                    status:
                                        type: string
                                        description: Status of the validation
                                    errors:
                                        type: object
                                        additionalProperties:
                                            type: array
                                            items:
                                                type: string
                                        description: Object containing field-specific error messages
                "500":
                    description: Internal Server Error
    /user/{userId}/order:
        post:
            summary: Order services
            description: Orders multiple services.
            tags:
                - Order service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/RequiredDate"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - services
                            properties:
                                note:
                                    type: string
                                    description: >
                                        Additional information for the helpdesk team
                                services:
                                    type: array
                                    items:
                                        type: object
                                        required:
                                            - type
                                        properties:
                                            type:
                                                type: string
                                                enum: [domain, thehosting]
                                            domain:
                                                type: string
                                                description: >
                                                    Domain name (required for 'domain' service type)
                                            limit:
                                                type: integer
                                                minimum: 1024
                                                description: >
                                                    Hosting limit in MB (required for 'thehosting' service type)
            responses:
                "201":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        description: Status of the order
                                    item:
                                        type: object
                                        properties:
                                            id:
                                                type: integer
                                                description: Order ID
                                            services:
                                                type: array
                                                items:
                                                    type: object
                                                    properties:
                                                        status:
                                                            type: string
                                                            description: Status of the service
                                                        item:
                                                            type: object
                                                            description: Service details
                                                        errors:
                                                            type: array
                                                            items:
                                                                type: object
                                                            description: Error messages for the service
                                            note:
                                                type: string
                                                description: Additional information for the helpdesk team
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                        description: Error messages for the order
                "200":
                    description: Validation error or input format error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        description: Status of the order
                                    item:
                                        type: object
                                        properties:
                                            id:
                                                type: integer
                                                nullable: true
                                                description: Order ID
                                            services:
                                                type: array
                                                items:
                                                    type: object
                                                    properties:
                                                        status:
                                                            type: string
                                                            description: Status of the service
                                                        item:
                                                            type: object
                                                            description: Service details
                                                        errors:
                                                            type: object
                                                            properties:
                                                                domain:
                                                                    type: array
                                                                    items:
                                                                        type: string
                                                                    description: Error messages for the domain service
                                                                limit:
                                                                    type: array
                                                                    items:
                                                                        type: string
                                                                    description: Error messages for the hosting service
                                            note:
                                                type: string
                                                description: Additional information for the helpdesk team
                                    errors:
                                        type: object
                                        properties:
                                            services:
                                                type: array
                                                items:
                                                    type: string
                                                description: Error messages for the services in the order
                "500":
                    description: Internal Server Error
    /user/{userId}/order/{orderId}/pay:
        get:
            summary: Get payment URLs
            description: Retrieves the payment URLs for the specified order.
            tags:
                - Order service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/OrderId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Pay"
                "404":
                    $ref: "#/components/responses/NotFound"
    /user/{userId}/order/{orderId}/pay/byCredit:
        put:
            summary: Pay with credit
            description: Pays for the specified order using credit.
            tags:
                - Order service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/OrderId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: boolean
                                        description: Indicates if the payment was successful
                "404":
                    $ref: "#/components/responses/NotFound"
    /user/{userId}/order/{orderId}/pay/byPaymentCard/{byPaymentCardId}:
        put:
            summary: Pay with a stored card
            description: Pays for the specified order using a stored payment card.
            tags:
                - Order service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/OrderId"
                - $ref: "#/components/parameters/ByPaymentCardId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: boolean
                                        description: Indicates if the payment was successful
                "404":
                    $ref: "#/components/responses/NotFound"
    /user/{userId}/paymentcard:
        get:
            summary: List of all payment cards
            description: Retrieves the list of all payment cards for the logged-in user.
            tags:
                - Order service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    items:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/PaymentCardDetail"
                                    credit:
                                        type: integer
                                        description: User's credit
                "404":
                    $ref: "#/components/responses/NotFound"
    /user/{userId}/paymentcard/{paymentcardId}:
        get:
            summary: Get a payment card detail
            description: Retrieves the details of a payment card by its ID.
            tags:
                - Order service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/PaymentCardId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/PaymentCardDetail"
                "404":
                    $ref: "#/components/responses/NotFound"

    # Service management
    /user/{userId}/service:
        get:
            summary: List of all services
            description: Retrieves information about all services.
            tags:
                - Service management
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    items:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/Service"
                                    pager:
                                        $ref: "#/components/schemas/Pager"
                "401":
                    description: Unauthorized
                "403":
                    description: Forbidden
    /user/{userId}/service/{serviceId}:
        get:
            summary: Get a service detail
            description: Retrieves detailed information about a specific service.
            tags:
                - Service management
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/ServiceId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Service"
                "401":
                    description: Unauthorized
                "403":
                    description: Forbidden
                "404":
                    description: Not Found
        put:
            summary: Update service
            description: Updates the settings of a specific service.
            tags:
                - Service management
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/ServiceId"
                - $ref: "#/components/parameters/RequiredDate"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                autoExtend:
                                    type: boolean
                                    description: Whether to automatically pay service from credits before expiration
            responses:
                "201":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                    item:
                                        $ref: "#/components/schemas/Service"
                                    errors:
                                        type: object
                "401":
                    description: Unauthorized
                "403":
                    description: Forbidden
                "404":
                    description: Not Found

    # User service
    /user:
        get:
            summary: List all users
            description: Retrieves a list of all users.
            tags:
                - User service
            parameters:
                - $ref: "#/components/parameters/Page"
                - $ref: "#/components/parameters/PageSize"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    items:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: integer
                                                login:
                                                    type: string
                                                parentId:
                                                    type: integer
                                                active:
                                                    type: boolean
                                                createTime:
                                                    type: integer
                                                group:
                                                    type: string
                                    pager:
                                        $ref: "#/components/schemas/Pager"
                "401":
                    description: Unauthorized
        post:
            summary: Create a new user
            description: Creates a new user account.
            tags:
                - User service
            parameters:
                - $ref: "#/components/parameters/RequiredDate"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UserRegister"
            responses:
                "201":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    item:
                                        $ref: "#/components/schemas/UserRegister"
                                    status:
                                        type: string
                                    errors:
                                        type: array
                                        items:
                                            type: object
                "200":
                    description: Validation error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    item:
                                        $ref: "#/components/schemas/UserRegister"
                                    status:
                                        type: string
                                    errors:
                                        type: object
                                        properties:
                                            login:
                                                type: array
                                                items:
                                                    type: string
                                            market:
                                                type: array
                                                items:
                                                    type: string
    /user/{userId}:
        get:
            summary: Get a user detail
            description: >
                Retrieves detailed information about a specific user.
            tags:
                - User service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserDetail"
                "404":
                    description: User not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                    code:
                                        type: integer
        put:
            summary: Update user
            description: Updates an existing user account.
            tags:
                - User service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/RequiredDate"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UserUpdate"
            responses:
                "201":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    item:
                                        $ref: "#/components/schemas/UserUpdate"
                                    status:
                                        type: string
                                    errors:
                                        type: array
                                        items:
                                            type: object
                "200":
                    description: Validation error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    item:
                                        $ref: "#/components/schemas/UserUpdate"
                                    status:
                                        type: string
                                    errors:
                                        type: object
                                        properties:
                                            email:
                                                type: array
                                                items:
                                                    type: string
                                            password:
                                                type: array
                                                items:
                                                    type: string
                "404":
                    description: User not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                    code:
                                        type: integer
    /user/restorepass:
        post:
            summary: Password reset
            description: Resets the password for a user account.
            tags:
                - User service
            parameters:
                - $ref: "#/components/parameters/RequiredDate"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                login:
                                    type: string
                                    description: User login
            responses:
                "201":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                "200":
                    description: Error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                    errors:
                                        type: object
                                        properties:
                                            login:
                                                type: array
                                                items:
                                                    type: string
    /user/{userId}/billing:
        get:
            summary: List of all billing profiles
            description: Retrieves a list of all billing profiles for a user.
            tags:
                - User service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/Page"
                - $ref: "#/components/parameters/PageSize"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    items:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/BillingProfile"
                                    pager:
                                        $ref: "#/components/schemas/Pager"
                "404":
                    description: User not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                    code:
                                        type: integer
        post:
            summary: Create a new billing profile
            description: Creates a new billing profile for a user.
            tags:
                - User service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/RequiredDate"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/BillingProfile"
            responses:
                "201":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    item:
                                        $ref: "#/components/schemas/BillingProfile"
                                    status:
                                        type: string
                                    errors:
                                        type: array
                                        items:
                                            type: string
                "200":
                    description: Validation error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    item:
                                        $ref: "#/components/schemas/BillingProfile"
                                    status:
                                        type: string
                                    errors:
                                        type: object
                                        properties:
                                            profile:
                                                type: array
                                                items:
                                                    type: string
                                            zip:
                                                type: array
                                                items:
                                                    type: string
                                            country:
                                                type: array
                                                items:
                                                    type: string
                "404":
                    description: User not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                    code:
                                        type: integer
    /user/{userId}/billing/{billingId}:
        get:
            summary: Get a billing profile detail
            description: Retrieves the details of a billing profile by its ID.
            tags:
                - User service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/BillingId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/BillingProfile"
                "404":
                    description: Billing info not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                    code:
                                        type: integer
        put:
            summary: Update billing profile
            description: Updates an existing billing profile.
            tags:
                - User service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/BillingId"
                - $ref: "#/components/parameters/RequiredDate"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/BillingProfile"
            responses:
                "201":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    item:
                                        $ref: "#/components/schemas/BillingProfile"
                                    status:
                                        type: string
                                    errors:
                                        type: array
                                        items:
                                            type: string
                "200":
                    description: Validation error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    item:
                                        $ref: "#/components/schemas/BillingProfile"
                                    status:
                                        type: string
                                    errors:
                                        type: object
                                        properties:
                                            name:
                                                type: array
                                                items:
                                                    type: string
                "404":
                    description: User not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                    code:
                                        type: integer
        delete:
            summary: Delete billing profile
            description: Deletes a billing profile.
            tags:
                - User service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/BillingId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    item:
                                        $ref: "#/components/schemas/BillingProfile"
                                    status:
                                        type: string
                                    errors:
                                        type: array
                                        items:
                                            type: string
                "404":
                    description: Billing info not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                    code:
                                        type: integer
                "500":
                    description: Error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                    code:
                                        type: integer
    /user/{userId}/domainProfile:
        get:
            summary: List of all domain profiles
            description: Retrieves a list of all domain profiles.
            tags:
                - User service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/Page"
                - $ref: "#/components/parameters/PageSize"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    items:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/DomainProfile"
                                    pager:
                                        $ref: "#/components/schemas/Pager"
                "404":
                    description: User not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                    code:
                                        type: integer
        post:
            summary: Create new domain profile
            description: Creates a new domain profile.
            tags:
                - User service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/RequiredDate"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DomainProfile"
            responses:
                "201":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    item:
                                        $ref: "#/components/schemas/DomainProfile"
                                    status:
                                        type: string
                                    errors:
                                        type: object
                "200":
                    description: Validation error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    item:
                                        $ref: "#/components/schemas/DomainProfile"
                                    status:
                                        type: string
                                    errors:
                                        type: object
    /user/{userId}/domainProfile/{domainProfileId}:
        get:
            summary: Get a domain profile
            description: Retrieves a domain profile by ID.
            tags:
                - User service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/DomainProfileId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/DomainProfile"
                                    - type: object
                                      properties:
                                          domains:
                                              type: array
                                              items:
                                                  type: string
                                          pendingDomains:
                                              type: array
                                              items:
                                                  type: string
                                          changeRequest:
                                              type: array
                                              items:
                                                  type: string
                "404":
                    description: Domain profile not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                    code:
                                        type: integer
        put:
            summary: Update domain profile
            description: Updates a domain profile by ID.
            tags:
                - User service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/DomainProfileId"
                - $ref: "#/components/parameters/RequiredDate"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DomainProfile"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    item:
                                        $ref: "#/components/schemas/DomainProfile"
                                    status:
                                        type: string
                                    errors:
                                        type: object
                "404":
                    description: Not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                    code:
                                        type: integer
        delete:
            summary: Delete domain profile
            description: Deletes a domain profile by ID.
            tags:
                - User service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/DomainProfileId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                "400":
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                    code:
                                        type: integer

    # VPS service
    /user/{userId}/vps:
        get:
            summary: List all VPS servers
            description: Retrieves a list of Virtual Private Servers (VPS) associated with the user.
            tags:
                - VPS service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - page
                                    - items
                                properties:
                                    items:
                                        type: array
                                        description: List of VPS servers
                                        items:
                                            type: object
                                            required:
                                                - id
                                                - name
                                            properties:
                                                id:
                                                    type: integer
                                                    description: VPS server ID
                                                name:
                                                    type: string
                                                    description: VPS server name
                                    pager:
                                        $ref: "#/components/schemas/Pager"
    /user/{userId}/vps/{vpsIdOrName}:
        get:
            summary: Get VPS detail
            description: Retrieves detailed information about a Virtual Private Server (VPS) by ID or name.
            tags:
                - VPS service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/VpsIdOrName"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/VPSDetail"
    /user/{userId}/vps/{vpsIdOrName}/vnc:
        get:
            summary: Get VNC console
            description: Retrieves the VNC console information for a Virtual Private Server (VPS) by ID or name.
            tags:
                - VPS service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/VpsIdOrName"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - id
                                    - name
                                    - vnc
                                properties:
                                    id:
                                        type: integer
                                        description: VPS server ID
                                    name:
                                        type: string
                                        description: VPS server name
                                    vnc:
                                        $ref: "#/components/schemas/VNC"
    /user/{userId}/vps/{vpsIdOrName}/cpu-stats:
        get:
            summary: CPU Stats
            description: Get CPU statistics for a Virtual Private Server (VPS).
            tags:
                - VPS service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/VpsIdOrName"
                - $ref: "#/components/parameters/Interval"
                - $ref: "#/components/parameters/Length"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - range
                                    - items
                                properties:
                                    range:
                                        description: Range of timestamps for the CPU measurements
                                        $ref: "#/components/schemas/Range"
                                    items:
                                        type: array
                                        items:
                                            type: object
                                            required:
                                                - timestamp
                                                - write_bytes
                                                - memory_vms
                                                - memory_rss
                                                - system
                                                - read_bytes
                                                - user
                                            properties:
                                                timestamp:
                                                    type: integer
                                                    description: Timestamp of the CPU measurement
                                                write_bytes:
                                                    type: integer
                                                    description: Number of bytes written
                                                memory_vms:
                                                    type: integer
                                                    description: Virtual memory size in bytes
                                                memory_rss:
                                                    type: integer
                                                    description: Resident set size in bytes
                                                system:
                                                    type: integer
                                                    description: CPU time spent in system mode
                                                read_bytes:
                                                    type: integer
                                                    description: Number of bytes read
                                                user:
                                                    type: integer
                                                    description: CPU time spent in user mode
                                        description: CPU measurements
    /user/{userId}/vps/{vpsIdOrName}/traffic-stats:
        get:
            summary: Traffic Stats
            description: Get traffic statistics for a Virtual Private Server (VPS).
            tags:
                - VPS service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/VpsIdOrName"
                - $ref: "#/components/parameters/Interval"
                - $ref: "#/components/parameters/Length"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - range
                                    - items
                                properties:
                                    range:
                                        description: Range of timestamps for the traffic measurements
                                        $ref: "#/components/schemas/Range"
                                    items:
                                        type: array
                                        description: Traffic measurements
                                        items:
                                            type: object
                                            required:
                                                - timestamp
                                                - obyt
                                                - opkt
                                                - ibyt
                                                - ipkt
                                            properties:
                                                timestamp:
                                                    type: integer
                                                    description: Timestamp of the traffic measurement
                                                obyt:
                                                    type: integer
                                                    description: Outgoing bytes
                                                opkt:
                                                    type: integer
                                                    description: Outgoing packets
                                                ibyt:
                                                    type: integer
                                                    description: Incoming bytes
                                                ipkt:
                                                    type: integer
                                                    description: Incoming packets
    /user/{userId}/vps/{vpsIdOrName}/reboot:
        get:
            summary: List VPS Snapshots
            description: Retrieve a list of all snapshots for the specified VPS.
            tags:
                - VPS service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/VpsIdOrName"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - items
                                properties:
                                    items:
                                        type: array
                                        description: List of snapshots
                                        items:
                                            $ref: "#/components/schemas/Snapshot"
        put:
            summary: Reboot VPS
            description: Reboots a Virtual Private Server (VPS) by ID or name.
            tags:
                - VPS service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/VpsIdOrName"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - status
                                    - item
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        description: Status of the operation (success or error)
                                    item:
                                        type: object
                                        required:
                                            - id
                                            - name
                                        properties:
                                            id:
                                                type: integer
                                                description: VPS server ID
                                            name:
                                                type: string
                                                description: VPS server name
                                    errors:
                                        $ref: "#/components/schemas/ValidationErrors"
    /user/{userId}/vps/{vpsIdOrName}/hard-reboot:
        put:
            summary: Hard Reboot VPS
            description: >
                Performs a hard reboot of a Virtual Private Server (VPS) by ID
                or name.
            tags:
                - VPS service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/VpsIdOrName"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - status
                                    - item
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        description: Status of the operation (success or error)
                                    item:
                                        type: object
                                        required:
                                            - id
                                            - name
                                        properties:
                                            id:
                                                type: integer
                                                description: VPS server ID
                                            name:
                                                type: string
                                                description: VPS server name
                                    errors:
                                        $ref: "#/components/schemas/ValidationErrors"
    /user/{userId}/vps/{vpsIdOrName}/snapshot:
        get:
            summary: List VPS Snapshots
            description: >
                Retrieve a list of all snapshots for the specified VPS.
            tags:
                - VPS service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/VpsIdOrName"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - items
                                properties:
                                    items:
                                        type: array
                                        description: List of snapshots
                                        items:
                                            $ref: "#/components/schemas/Snapshot"
        post:
            summary: Create VPS Snapshot
            description: Saves the current state of the specified VPS into a snapshot.
            tags:
                - VPS service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/VpsIdOrName"
                - $ref: "#/components/parameters/RequiredDate"
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - description
                            properties:
                                description:
                                    type: string
                                    description: Description of the snapshot
            responses:
                "201":
                    description: Created
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Snapshot"

                "403":
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - code
                                    - message
                                properties:
                                    code:
                                        type: integer
                                        description: Error code
                                    message:
                                        type: string
                                        description: Error message
    /user/{userId}/vps/{vpsIdOrName}/snapshot/{snapshotName}:
        post:
            summary: Restore VPS from Snapshot
            description: Rollbacks the specified VPS to the state of the specified snapshot.
            tags:
                - VPS service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/VpsIdOrName"
                - $ref: "#/components/parameters/SnapshotName"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "204":
                    description: No Content
        delete:
            summary: Delete VPS Snapshot
            description: Deletes the specified VPS snapshot.
            tags:
                - VPS service
            parameters:
                - $ref: "#/components/parameters/UserId"
                - $ref: "#/components/parameters/VpsIdOrName"
                - $ref: "#/components/parameters/SnapshotName"
                - $ref: "#/components/parameters/RequiredDate"
            responses:
                "204":
                    description: No Content

components:
    securitySchemes:
        basicAuth:
            type: http
            scheme: basic
            description: https://rest.websupport.sk/docs/v1.intro

    parameters:
        RequiredDate:
            name: date
            in: header
            required: true
            example: 2023-01-01T00:00:00Z
            schema:
                type: string
                format: date-time
            description: >
                Date header with the time used for the signature
                in the ISO8601 basic format, in the GMT timezone.

        UserId:
            name: userId
            in: path
            required: true
            schema:
                oneOf:
                    - type: string
                      enum: [self]
                    - type: string
                      description: >
                          User ID or "self" for currently logged user

        Page:
            name: page
            in: query
            required: false
            schema:
                type: integer
                description: Page number

        PageSize:
            name: pagesize
            in: query
            required: false
            schema:
                type: integer
                description: Number of items per page

        RecordId:
            name: recordId
            in: path
            required: true
            schema:
                type: integer
                description: Record ID

        IdOrUUID:
            name: id-or-uuid
            in: path
            required: true
            schema:
                type: string
                description: Service ID or UUID of the hosting

        HostingId:
            name: hostingId
            in: path
            required: true
            schema:
                type: integer
                description: Hosting ID

        VhostID:
            name: vhostId
            in: path
            required: true
            schema:
                type: integer
                description: Vhost ID

        DatabaseId:
            name: dbId
            in: path
            required: true
            schema:
                type: integer
                description: Database ID

        DomainName:
            name: domainName
            in: path
            required: true
            schema:
                type: string
                description: Domain name of the zone

        Interval:
            name: interval
            in: query
            required: false
            schema:
                type: string
                enum: [day, hour]
                default: day
                description: Time interval for measurements (day or hour)

        Length:
            name: length
            in: query
            required: false
            schema:
                type: integer
                description: >
                    Number of shown measurements (time perioddepends on
                    choseninterval)

        MailboxId:
            name: mailboxId
            in: path
            required: true
            schema:
                type: integer
                description: Mailbox ID

        DomainId:
            name: domainId
            in: path
            required: true
            schema:
                type: integer
                description: Domain ID

        FTPAccountId:
            name: ftpAccountId
            in: path
            required: true
            schema:
                type: integer
                description: FTP account ID
        InvoiceId:
            name: invoiceId
            in: path
            required: true
            schema:
                type: integer
                description: Invoice ID

        PaymentCardId:
            name: paymentCardId
            in: path
            required: true
            schema:
                type: integer
                description: Payment Card ID

        Market:
            name: market
            in: path
            required: true
            schema:
                type: string
                description: >
                    Market identifier (e.g., sk, cz, hu, at)

        Type:
            name: type
            in: path
            required: true
            schema:
                type: string
                description: >
                    Service type (e.g., domain, thehosting, etc.)

        OrderId:
            name: orderId
            in: path
            required: true
            schema:
                type: string
                description: Order ID

        ByPaymentCardId:
            name: byPaymentCardId
            in: path
            required: true
            schema:
                type: string
                description: Payment card ID

        ServiceId:
            name: serviceId
            in: path
            required: true
            schema:
                type: integer
                description: Service ID

        BillingId:
            name: billingId
            in: path
            required: true
            schema:
                type: integer
                description: Billing profile ID

        DomainProfileId:
            name: domainProfileId
            in: path
            required: true
            schema:
                type: string
                description: Domain profile ID

        VpsIdOrName:
            name: vpsIdOrName
            in: path
            required: true
            schema:
                type: string
                description: VPS ID or name
        SnapshotName:
            name: snapshotName
            in: path
            required: true
            schema:
                type: string
                description: Name of the snapshot to restore

    responses:
        NotFound:
            description: Not found
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            code:
                                type: integer
                                description: Error code
                            message:
                                type: string
                                description: Error message

    schemas:
        Pager:
            type: object
            description: Pagination information
            properties:
                page:
                    type: integer
                    description: Current page number
                pagesize:
                    type: integer
                    description: Number of items per page
                items:
                    type: integer
                    description: Number of items in the current page

        Range:
            type: array
            items:
                type: integer

        ValidationErrors:
            description: Validation errors (if any)
            type: object
            additionalProperties:
                type: array
                items:
                    type: string

        FTPAccount:
            type: object
            required:
                - login
                - password
            properties:
                id:
                    type: integer
                    readOnly: true
                    description: FTP account ID
                createTime:
                    type: integer
                    readOnly: true
                    description: Timestamp of account creation
                hostingId:
                    type: integer
                    readOnly: true
                    description: Hosting ID
                login:
                    type: string
                    description: >
                        FTP login (e.g., foo for foo.testingdomain.sk)
                password:
                    type: string
                    writeOnly: true
                    description: FTP password
                dir:
                    type: string
                    default: "/"
                    description: >
                        FTP account directory
                disabled:
                    type: boolean
                    description: >
                        Indicates if the account is disabled
                ftpEnabled:
                    type: boolean
                    default: true
                    description: >
                        Indicates if FTP is enabled for the account
                sshEnabled:
                    type: boolean
                    description: >
                        Indicates if SSH is enabled for the account
                countryCheck:
                    type: boolean
                    default: false
                    description: >
                        Indicates if country check is enabled for the account
                ipCheck:
                    type: boolean
                    default: false
                    description: >
                        Indicates if IP check is enabled for the account
                countries:
                    type: array
                    items:
                        type: string
                    example: ["SK", "CZ", "HU"]
                    description: >
                        Array of allowed countries in ISO 3166-1 
                        alpha-2 code (e.g., SK, CZ)
                ips:
                    type: array
                    items:
                        type: string
                        pattern: '^(?:[0-9]{1,3}\.){3}[0-9]{1,3}(?:\/[0-9]{1,2})?$'
                    description: >
                        Array of IPs for IP check in 
                        the format 1.2.3.0/24 or 1.2.3.4
                note:
                    type: string
                    description: Your note

        Mailbox:
            type: object
            required:
                - email
                - password
            properties:
                id:
                    type: number
                    readOnly: true
                    description: Mailbox ID
                domainId:
                    type: number
                    readOnly: true
                    description: Domain ID
                email:
                    type: string
                    description: >
                        Mailbox name, e.g., foo for foo@testdomain.sk
                password:
                    type: string
                    description: Mailbox password
                ipCheck:
                    type: boolean
                    default: false
                    description: >
                        Enable access to selected IP addresses
                ips:
                    type: array
                    items:
                        type: string
                        pattern: '^(?:[0-9]{1,3}\.){3}[0-9]{1,3}(?:\/[0-9]{1,2})?$'
                    description: >
                        Array of IPs for IP check in 
                        the format 1.2.3.0/24 or 1.2.3.4
                countryCheck:
                    type: boolean
                    default: true
                    description: Enable access to selected countries
                countries:
                    type: array
                    items:
                        type: string
                        pattern: "^[A-Z]{2}$"
                    default: [SK, CZ, HU, AT]
                    description:
                        Array of countries for country check. Use 2-letter country
                        identifiers like SK, CZ, etc.
                imapDisabled:
                    type: boolean
                    default: false
                    description: Disable IMAP
                pop3Disabled:
                    type: boolean
                    default: false
                    description: Disable POP3
                note:
                    type: string
                    description: Your note

        Market:
            type: object
            properties:
                name:
                    type: string
                    enum: [Slovakia, Czech Republic, Hungary, Austria]
                    description: Market name
                identifier:
                    type: string
                    enum: [sk, cz, hu, at]
                    description: Market identifier
                currency:
                    type: string
                    description: Market currency

        UserDetail:
            type: object
            properties:
                id:
                    type: integer
                    readOnly: true
                    description: User ID
                login:
                    type: string
                    description: User login name
                parentId:
                    type: integer
                    nullable: true
                    description: Parent user ID
                active:
                    type: boolean
                    description: Indicates if the user is active
                createTime:
                    type: integer
                    description: Creation timestamp
                group:
                    type: string
                    enum: [users, subadmins]
                    readOnly: true
                    description: User group type
                email:
                    type: string
                    description: User email address
                phone:
                    type: string
                    description: User phone number
                sknicHandle:
                    type: string
                    description: SK-NIC handle
                contactPerson:
                    type: string
                    description: Contact person in the user's company
                resellerToken:
                    type: string
                    description: Reseller token
                userLanguage:
                    type: string
                    description: User language
                credit:
                    type: number
                    description: User credit amount
                verifyUrl:
                    type: string
                    format: uri
                    description: Verification URL
                billing:
                    type: array
                    description: User's billing profiles
                    items:
                        readOnly: true
                        $ref: "#/components/schemas/BillingProfile"
                market:
                    $ref: "#/components/schemas/Market"

        UserRegister:
            type: object
            required:
                - login
                - password
                - email
                - name
                - city
                - street
                - zip
                - country
                - phone
                - confirmTerms
            properties:
                id:
                    type: integer
                    readOnly: true
                    nullable: true
                    description: User ID
                billingId:
                    type: integer
                    readOnly: true
                    nullable: true
                    description: Billing ID
                parentId:
                    type: integer
                    readOnly: true
                    nullable: true
                    description: Parent ID
                group:
                    type: string
                    enum: [users, subadmins]
                    readOnly: true
                    description: User group type
                market:
                    type: string
                    default: sk
                    enum: [sk, cz, hu, at]
                    description: >
                        2-letter market identifier. Default is 'sk' (Slovakia).
                        Allowed values: 'sk' (Slovakia), 'cz' (Czech Republic),
                        'hu' (Hungary), or 'at' (Austria).
                isSubUser:
                    type: boolean
                    default: false
                    description: >
                        Indicates whether the user is added as a subuser. If
                        'true', the user is added as your subuser, and you can
                        manage their settings and services. Requires
                        authentication!
                login:
                    type: string
                    description: User login name
                password:
                    type: string
                    writeOnly: true
                    description: Plain password
                email:
                    type: string
                    pattern: '^[\w+.-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
                    description: >
                        You can put multiple email addresses separated by comma (,)
                name:
                    type: string
                    description: >
                        Company name or your full name
                city:
                    type: string
                    description: City
                street:
                    type: string
                    description: >
                        Street address including number
                zip:
                    type: string
                    description: >
                        Area ZIP code
                country:
                    type: string
                    pattern: "^[A-Z]{2}$"
                    description: >
                        Two-letter country identifier, e.g., 'SK' for Slovakia
                phone:
                    type: string
                    description: >
                        Used for SMS notifications, etc.
                confirmTerms:
                    type: boolean
                    description: >
                        Indicates whether the user confirms the Terms and Conditions
                contactPerson:
                    type: string
                    description: >
                        Contact person in your company
                companyRegId:
                    type: string
                    description: >
                        Company registration ID (IČO in Slovakia or Czech
                        Republic)
                taxId:
                    type: string
                    description: >
                        Tax ID (DIČ in Slovakia or Czech Republic)
                vatId:
                    type: string
                    description: >
                        Value-added Tax (VAT) ID (IČ-DPH in Slovakia or Czech
                        Republic)
                isic:
                    type: string
                    description: >
                        ISIC student identification card number. Only applicable
                        for the Slovakian market (sk)

        UserUpdate:
            type: object
            properties:
                id:
                    type: integer
                    readOnly: true
                    description: User ID
                login:
                    type: string
                    readOnly: true
                    description: User login
                password:
                    type: string
                    description: Plain password
                email:
                    type: string
                    description: >
                        Email addresses separated by comma (,)
                phone:
                    type: string
                    description: >
                        Phone number for notifications
                contactPerson:
                    type: string
                    description: >
                        Contact person in your company
                userLanguage:
                    type: string
                    enum: [sk, cs, hu, de, en, sv]
                    writeOnly: true
                    description: >
                        Language used for notifications

        BillingProfile:
            type: object
            required:
                - profile
                - name
                - city
                - street
                - zip
                - country
            properties:
                id:
                    type: integer
                    readOnly: true
                    description: Billing profile ID
                profile:
                    type: string
                    description: >
                        Billing profile name (not used in invoices, for
                        informational purposes)
                isDefault:
                    type: boolean
                    description: >
                        Set this to true if you want this profile as the primary
                        billing profile
                name:
                    type: string
                    description: Company name or full name
                city:
                    type: string
                    description: City
                street:
                    type: string
                    description: Street + number
                zip:
                    type: string
                    description: Area ZIP code
                country:
                    type: string
                    description: >
                        Two-letter country identifier (e.g., sk for Slovakia)
                companyRegId:
                    type: string
                    description: >
                        Company registration ID (IČO in Slovakia or Czech Republic)
                taxId:
                    type: string
                    description: >
                        Tax ID (DIČ in Slovakia or Czech Republic)
                vatId:
                    type: string
                    description: >
                        Value-added Tax (VAT) 
                        ID (IČ-DPH in Slovakia or Czech Republic)
                isic:
                    type: string
                    description: >
                        ISIC Student Identification card number 
                        (only in Slovakia)

        DomainProfile:
            type: object
            required:
                - firstName
                - lastName
                - street
                - city
                - zip
                - country
                - email
                - phone
            properties:
                id:
                    type: string
                    readOnly: true
                    description: Domain profile ID
                firstName:
                    type: string
                    description: First name
                lastName:
                    type: string
                    description: Last name
                orgName:
                    type: string
                    nullable: true
                    description: >
                        Company name, if submitted a corporate domain profile
                        will be created
                street:
                    type: string
                    description: Street + house number
                city:
                    type: string
                    description: City
                zip:
                    type: string
                    description: Postcode
                country:
                    type: string
                    description: >
                        Two-letter country identifier (e.g., sk for Slovakia)
                email:
                    type: string
                    format: email
                    description: >
                        Valid email address (will be used to authorize any
                        subsequent change to assigned domain profile)
                phone:
                    type: string
                    nullable: true
                    description: >
                        Phone number in the format: +421900123456
                identCompanyRegistration:
                    type: string
                    nullable: true
                    description: >
                        Company registration ID (IČO in Slovakia or Czech
                        Republic), required for company-registered .sk domains
                identVat:
                    type: string
                    nullable: true
                    description: >
                        Value-added Tax (VAT) ID (IČ-DPH in Slovakia or Czech
                        Republic)
                identIdentityCard:
                    type: string
                    nullable: true
                    description: >
                        Personal ID card number, required for registration of
                        some TLDs
                identBirthday:
                    type: string
                    format: date
                    nullable: true
                    description: >
                        Birthdate (yyyy-M-d), required for registration of some
                        TLDs
                identPassport:
                    type: string
                    nullable: true
                    description: >
                        Passport number, required for registration of some TLDs

        ValidateHosting:
            type: object
            required:
                - limit
            properties:
                limit:
                    type: integer
                    minimum: 1024
                    maximum: 256000
                    description: >
                        Hosting limit in MB 
                        (range 1024~256000, 1 - 250 GB)
                period:
                    type: integer
                    default: 1
                    minimum: 1
                    maximum: 12
                    description: >
                        Service billing period in months (range 1~12, default is 1)

        Database:
            type: object
            required:
                - dbName
                - dbUser
                - dbType
                - defaultCollation
            properties:
                id:
                    type: integer
                    readOnly: true
                    description: Database ID
                domain:
                    type: string
                    description: >
                        Domain in selected hosting (sometimes not required)
                dbName:
                    type: string
                    description: Database name
                dbUser:
                    type: string
                    description: Database user
                dbPassword:
                    type: string
                    writeOnly: true
                    description: >
                        Password required when creating a new user. Do not send when
                        assigning an existing user.
                dbType:
                    type: string
                    enum:
                        [
                            mariadb105,
                            mariadb103,
                            mysql80,
                            mysql57,
                            postgresql100,
                        ]
                    description: >
                        Choose one from: mariadb105, mariadb103, mysql80, mysql57, postgresql100
                defaultCollation:
                    type: string
                    description: Default character encoding
                deleted:
                    type: boolean
                    readOnly: true
                    description: Indicates if the database is deleted
                disabled:
                    type: boolean
                    readOnly: true
                    description: Indicates if the database is disabled
                note:
                    type: string
                    description: Your note

        DatabaseUpdate:
            type: object
            properties:
                dbPassword:
                    type: string
                    description: Password for the database
                note:
                    type: string
                    description: Additional note

        VPS:
            type: object
            required:
                - name
                - ram
                - disk
                - vcpus
                - templateName
                - templateVersion
            properties:
                name:
                    type: string
                    pattern: "^[A-Za-z0-9]+$"
                    description: >
                        VPS hostname (only alphanumeric characters)
                ram:
                    type: integer
                    description: RAM size in MB
                disk:
                    type: integer
                    description: HDD size in GB
                vcpus:
                    type: integer
                    description: Number of virtual CPUs
                templateName:
                    type: string
                    description: >
                        Template name 
                        (list of all templates is in Service details)
                templateVersion:
                    type: string
                    description: Template version
                period:
                    type: integer
                    minimum: 1
                    maximum: 12
                    default: 1
                    nullable: true
                    description: >
                        Service billing period in months 
                        (range 1~12, default is 1)
                secondaryIp:
                    type: boolean
                    default: false
                    nullable: true
                    description: >
                        Flag indicating if secondary IP is enabled (default is false)
                backups:
                    type: boolean
                    default: true
                    nullable: true
                    description: >
                        Flag indicating if backups are enabled (default is true)

        VPSDetail:
            type: object
            required:
                - id
                - name
                - status
                - created
                - updated
                - ips
                - flavor
            properties:
                id:
                    type: integer
                    readOnly: true
                    description: VPS server ID
                created:
                    type: integer
                    readOnly: true
                    description: Unix timestamp of VPS server creation
                updated:
                    type: integer
                    readOnly: true
                    description: Unix timestamp of last VPS server update
                name:
                    type: string
                    description: VPS server name
                status:
                    type: string
                    description: VPS server status
                progress:
                    type: integer
                    description: Progress of a task performed on the VPS server
                ips:
                    type: array
                    description: >
                        Array of IPs for IP check in 
                        the format 1.2.3.0/24 or 1.2.3.4
                    items:
                        type: string
                        pattern: '^(?:[0-9]{1,3}\.){3}[0-9]{1,3}(?:\/[0-9]{1,2})?$'
                reverse_dns:
                    type: object
                    additionalProperties:
                        type: string
                    description: Mapping of IP addresses to reverse DNS records
                flavor:
                    type: object
                    properties:
                        disk:
                            type: integer
                            description: Disk size in GB
                        vcpus:
                            type: integer
                            description: Number of virtual CPUs
                        ram:
                            type: integer
                            description: Amount of RAM in MB
                        name:
                            type: string
                            description: Flavor name
                    description: VPS server flavor information

        VNC:
            type: object
            required:
                - url
                - token
                - websocket
            properties:
                url:
                    type: string
                    format: uri
                    description: URL for accessing the VNC console
                token:
                    type: string
                    description: VNC token for authentication
                websocket:
                    type: string
                    description: Websocket URL for VNC communication

        Pricing:
            type: object
            properties:
                price:
                    type: number
                    format: float
                    description: >
                        Price for the VPS service
                priceWithVat:
                    type: number
                    format: float
                    description: >
                        Price for the VPS service with VAT
                currency:
                    type: string
                    description: Currency code
                period:
                    type: integer
                    nullable: true
                    description: >
                        Duration of the service billing period (nullable)
                periodLength:
                    type: string
                    nullable: true
                    description: >
                        Length of the billing period (nullable)
                priceDetail:
                    $ref: "#/components/schemas/PriceDetail"

        PriceDetail:
            type: object
            properties:
                prices:
                    type: object
                    description: >
                        Pricing details for individual components
                    additionalProperties:
                        type: number
                        format: float
                pricesWithVat:
                    type: object
                    description: >
                        Pricing details for individual components with VAT
                    additionalProperties:
                        type: number
                        format: float
        Snapshot:
            type: object
            required:
                - created
                - name
                - description
                - status
            properties:
                created:
                    type: integer
                    description: Timestamp of the snapshot creation
                name:
                    type: string
                    description: Name of the snapshot
                description:
                    type: string
                    description: Description of the snapshot
                status:
                    type: string
                    description: Status of the snapshot

        WebhostingDomains:
            type: object
            properties:
                id:
                    type: integer
                    description: Vhost ID
                domain:
                    type: string
                    description: Domain name
                sub:
                    type: string
                    description: Subdomain
                webOnStorage:
                    type: string
                    description: Web on storage
                subOnStorage:
                    type: string
                    description: Subdomain on storage
                logsOnStorage:
                    type: string
                    description: Logs on storage
                disabled:
                    type: boolean
                    description: Indicates if the vhost is disabled
                keepAliveOff:
                    type: boolean
                    description: Indicates if keep-alive is turned off
                phpOpenBaseDir:
                    type: boolean
                    description: Indicates if PHP open_basedir is enabled
                phpOpenBaseDirStorage:
                    type: boolean
                    description: Indicates if PHP open_basedir storage is enabled
                phpOpenBaseDirAll:
                    type: boolean
                    description: Indicates if PHP open_basedir applies to all directories
                phpOpenBaseWebInWeb:
                    type: boolean
                    description: Indicates if PHP open_basedir allows access to web in web
                nonExistSubDomainsToWeb:
                    type: boolean
                    description: Indicates if non-existent subdomains redirect to the web
                phpMysql51Default:
                    type: boolean
                    description: Indicates if PHP MySQL 5.1 is the default version
                phpMysql50Default:
                    type: boolean
                    description: Indicates if PHP MySQL 5.0 is the default version
                phpMysql55Default:
                    type: boolean
                    description: Indicates if PHP MySQL 5.5 is the default version
                phpSafeModeOff:
                    type: boolean
                    description: Indicates if PHP safe mode is turned off
                phpRegisterGlobalsOff:
                    type: boolean
                    description: Indicates if PHP register_globals is turned off
                phpUploadMaxFilesize:
                    type: integer
                    description: Maximum file size for PHP uploads
                phpMemoryLimit:
                    type: integer
                    description: PHP memory limit
                phpPostMaxSize:
                    type: integer
                    description: Maximum POST size for PHP
                phpMaxExecutionTime:
                    type: integer
                    description: Maximum execution time for PHP

        Invoice:
            type: object
            properties:
                id:
                    type: integer
                type:
                    type: string
                number:
                    type: string
                variable:
                    type: string
                createTime:
                    type: integer
                dateOfPerformance:
                    type: integer
                dueDate:
                    type: integer
                price:
                    type: number
                priceWithVat:
                    type: number
                vatPercent:
                    type: integer
                currency:
                    type: string
                items:
                    type: array
                    items:
                        type: object
                        properties:
                            serviceName:
                                type: string
                            name:
                                type: string
                            price:
                                type: number
                            priceWithVat:
                                type: number
                            startTime:
                                nullable: true
                                type: integer
                            endTime:
                                nullable: true
                                type: integer
                billing:
                    type: object
                    properties:
                        name:
                            type: string
                        city:
                            type: string
                        street:
                            type: string
                        zip:
                            type: string
                        country:
                            type: string
                        companyRegId:
                            type: string
                        taxId:
                            type: string
                        vatId:
                            type: string
                market:
                    type: object
                    properties:
                        name:
                            type: string
                        identifier:
                            type: string
        Service:
            type: object
            properties:
                id:
                    type: integer
                    readOnly: true
                createTime:
                    type: integer
                    readOnly: true
                expireTime:
                    type: integer
                    readOnly: true
                serviceName:
                    type: string
                status:
                    type: string
                name:
                    type: string
                price:
                    type: number
                autoExtend:
                    type: boolean

        Pay:
            type: object
            properties:
                tbtatrapay:
                    type: string
                    description: >
                        URL for TatraPay payment
                tbcardpay:
                    type: string
                    description: >
                        URL for CardPay credit cards payment
                vubeplatby:
                    type: string
                    description: >
                        URL for VUB ePayments internet banking payment
                comfortpay:
                    type: string
                    description: >
                        URL for ComfortPay recurring payment system

        PaymentCardDetail:
            type: object
            properties:
                id:
                    type: integer
                    readOnly: true
                    description: Payment card ID
                name:
                    type: string
                    description: Masked payment card number
                defaultBillingId:
                    type: integer
                    description: >
                        Default billing ID associated with the payment card
                createTime:
                    type: integer
                    readOnly: true
                    description: >
                        Timestamp indicating when the payment card was created

        CreditValidity:
            type: object
            properties:
                amount:
                    type: integer
                    description: >
                        The validated amount of credit
                price:
                    type: number
                    format: float
                    description: >
                        Price for the credit service
                priceWithVat:
                    type: number
                    format: float
                    description: >
                        Price for the credit service with VAT
                currency:
                    type: string
                    description: Currency code
                period:
                    type: integer
                    nullable: true
                    description: >
                        Duration of the service billing period (nullable)
                periodLength:
                    type: string
                    nullable: true
                    description: >
                        Length of the billing period (nullable)

        ValidateDomain:
            type: object
            required:
                - domain
            properties:
                domain:
                    type: string
                    description: >
                        The full domain name with TLD, e.g., scaledo.com
                dnsServers:
                    type: string
                    description: >
                        List of DNS servers separated by semicolon (;), e.g.,
                        ns1.websupport.sk;ns2.websupport.sk
                domainProfileId:
                    type: integer
                    description: >
                        ID of the domain profile (see Domain profiles)
                contactId:
                    type: string
                    description: Custom contact ID

        DomainValidity:
            type: object
            properties:
                domain:
                    type: string
                    description: >
                        The validated domain name
                suggest:
                    type: boolean
                    description: >
                        Indicates if a suggested domain is available
                dnsServers:
                    type: string
                    description: >
                        List of DNS servers separated by semicolon
                contactId:
                    type: string
                    readOnly: true
                    description: >
                        Custom contact ID
                domainProfileId:
                    type: integer
                    readOnly: true
                    description: >
                        ID of the domain profile
                amount:
                    type: integer
                    description: >
                        The validated amount of credit
                price:
                    type: number
                    format: float
                    description: >
                        Price for the credit service
                priceWithVat:
                    type: number
                    format: float
                    description: >
                        Price for the credit service with VAT
                currency:
                    type: string
                    description: >
                        Currency code
                period:
                    type: integer
                    nullable: true
                    description: >
                        Duration of the service billing period (nullable)
                periodLength:
                    type: string
                    nullable: true
                    description: >
                        Length of the billing period (nullable)

        HostingValidity:
            type: object
            properties:
                limit:
                    type: integer
                    description: The validated hosting limit in MB
                price:
                    type: number
                    format: float
                    description: Price for The Hosting service
                priceWithVat:
                    type: number
                    format: float
                    description: Price for The Hosting service with VAT
                currency:
                    type: string
                    description: Currency code
                period:
                    type: integer
                    description: Duration of the service billing period
                periodLength:
                    type: string
                    description: Length of the billing period

        SizeStats:
            type: object
            properties:
                hosting:
                    type: string
                    description: Hosting name
                used:
                    type: number
                    format: double
                    description: Used hosting size in GB
                free:
                    type: number
                    format: double
                    description: Free hosting size in GB
                available:
                    type: number
                    format: double
                    description: Total available hosting size in GB

        DomainStats:
            type: object
            properties:
                hosting:
                    type: string
                    description: Hosting name
                used:
                    type: integer
                    description: Number of used domains
                free:
                    type: integer
                    description: Number of free domains
                available:
                    type: integer
                    description: Total number of available domains

        FTPStats:
            type: object
            properties:
                hosting:
                    type: string
                    description: Hosting name
                used:
                    type: number
                    format: double
                    description: Amount of FTP storage used
                free:
                    type: number
                    format: double
                    description: Amount of free FTP storage
                available:
                    type: number
                    format: double
                    description: Total amount of available FTP storage

        Zone:
            type: object
            properties:
                id:
                    type: integer
                    readOnly: true
                    description: Zone ID
                name:
                    type: string
                    description: Zone name
                updateTime:
                    type: integer
                    description: Zone update time

        RecordA:
            type: object
            required:
                - type
            properties:
                type:
                    type: string
                name:
                    type: string
                content:
                    type: string
                    format: ipv4
                ttl:
                    type: integer
                    default: 600

        RecordAAAA:
            type: object
            required:
                - type
            properties:
                type:
                    type: string
                name:
                    type: string
                content:
                    type: string
                    format: ipv6
                ttl:
                    type: integer
                    default: 600

        RecordMX:
            type: object
            required:
                - type
            properties:
                type:
                    type: string
                name:
                    type: string
                content:
                    type: string
                    format: hostname
                prio:
                    type: integer
                ttl:
                    type: integer
                    default: 600

        RecordANAME:
            type: object
            required:
                - type
            properties:
                type:
                    type: string
                name:
                    type: string
                content:
                    type: string
                    format: hostname
                ttl:
                    type: integer
                    default: 600

        RecordCNAME:
            type: object
            required:
                - type
            properties:
                type:
                    type: string
                name:
                    type: string
                content:
                    type: string
                    format: hostname
                ttl:
                    type: integer
                    default: 600

        RecordNS:
            type: object
            required:
                - type
            properties:
                type:
                    type: string
                name:
                    type: string
                content:
                    type: string
                    format: hostname
                ttl:
                    type: integer
                    default: 600

        RecordTXT:
            type: object
            required:
                - type
            properties:
                type:
                    type: string
                name:
                    type: string
                content:
                    type: string
                ttl:
                    type: integer
                    default: 600

        RecordSRV:
            type: object
            required:
                - type
            properties:
                type:
                    type: string
                name:
                    type: string
                content:
                    type: string
                    format: hostname
                prio:
                    type: integer
                    description: >
                        Record priority (required for MX and SRV records)
                port:
                    type: integer
                    description: >
                        TCP or UDP port (required for SRV records)
                weight:
                    type: integer
                    description: >
                        Relative weight for records with the same priority
                        (required for SRV records)
                ttl:
                    type: integer
                    default: 600

        DNSRecord:
            type: object
            properties:
                zone:
                    readOnly: true
                    allOf:
                        - $ref: "#/components/schemas/Zone"
            oneOf:
                - $ref: "#/components/schemas/RecordA"
                - $ref: "#/components/schemas/RecordAAAA"
                - $ref: "#/components/schemas/RecordMX"
                - $ref: "#/components/schemas/RecordANAME"
                - $ref: "#/components/schemas/RecordCNAME"
                - $ref: "#/components/schemas/RecordNS"
                - $ref: "#/components/schemas/RecordTXT"
                - $ref: "#/components/schemas/RecordSRV"
            discriminator:
                propertyName: type
                mapping:
                    A: "#/components/schemas/RecordA"
                    AAAA: "#/components/schemas/RecordAAAA"
                    MX: "#/components/schemas/RecordMX"
                    ANAME: "#/components/schemas/RecordANAME"
                    CNAME: "#/components/schemas/RecordCNAME"
                    NS: "#/components/schemas/RecordNS"
                    TXT: "#/components/schemas/RecordTXT"
                    SRV: "#/components/schemas/RecordSRV"
